openapi: 3.0.1
info:
  title: Pet Sitter API
  description: |-
    Demo Spring Boot implementation of the Pet Sitter API from <i>"Designing APIs with Swagger and OpenAPI"
    </i> Ponelat, J.S., Rosenstock, L.L. (2022).

    We assume the domain model and a slightly modified version of the OpenAPI contract described at the end of
    Part 2. The focus of this implementation is software design. In particular how to use concepts from Domain
    Driven Design to connect the domain model and implementation.

    Note, this application is intended for demonstration purposes. It is not a production ready application,
    nor is it an enterprise grade application. The implementation reflects this.

    <b>Disclaimer:</b> there is no association with the book or its authors. Any errors are entirely
    self-contained.
  version: "0.1"
servers:
  - url: http://localhost:8080
    description: Local dev server
security:
  - SessionToken: []
tags:
  - name: Users
    description: User related operations
  - name: Jobs
    description: Job related operations
paths:
  /sessions:
    post:
      tags:
        - Users
      summary: Start Session (Login)
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionRequest"
            examples:
              validLogin:
                value:
                  email: "post-session@example.com"
                  password: 1Upper1Lower1Number
              invalidLogin:
                value:
                  email: "non-existent-user@example.com"
                  password: 1Upper1Lower1Number
        required: true
      responses:
        "201":
          description: Session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
              examples:
                validLogin:
                  value:
                    user_id: f7329e32-b689-4ded-9819-994bbe7edade
                    auth_header: "Bearer eyJhbGciOiJIUzI1NiJ9.eyJp..."
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                invalidLogin:
                  value:
                    type: "http://localhost:8080/errors/unauthorized"
                    title: Unauthorized
                    status: 401
                    detail: Bad credentials
                    instance: /sessions
                    timestamp: "2025-02-23 11:46"
      security: []
  /users:
    post:
      tags:
        - Users
      summary: Register User
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            examples:
              validUser:
                value:
                  email: "john-smith@example.com"
                  password: 1Upper1Lower1Number
                  full_name: John Smith
                  roles:
                    - PET_OWNER
              invalidUser:
                value:
                  email: "missing-full-name@example.com"
                  password: 1Upper1Lower1Number
                  roles:
                    - PET_OWNER
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: User URI
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                invalidUser:
                  value:
                    type: "http://localhost:8080/errors/bad-request"
                    title: Bad Request
                    status: 400
                    detail: Invalid argument(s)
                    instance: /users
                    user.full_name: cannot be null
                    timestamp: "2025-02-23 11:46"
      security: []
  /users/{uuid}:
    get:
      tags:
        - Users
      summary: View User
      operationId: viewUserWithId
      parameters:
        - name: uuid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validUser:
              value: 5d33db88-ef90-4868-814c-f4dd48273a04
      responses:
        "200":
          description: User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                validUser:
                  value:
                    id: 5d33db88-ef90-4868-814c-f4dd48273a04
                    email: "get-user@example.com"
                    full_name: John Smith
                    roles:
                      - PET_OWNER
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
        "404":
          description: User Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
    patch:
      tags:
        - Users
      summary: Modify User
      operationId: modifyUserWithId
      parameters:
        - name: uuid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validUpdate:
              value: fdc09ca4-4e44-4040-8873-9eaec0b456a9
            invalidUpdate:
              value: fdc09ca4-4e44-4040-8873-9eaec0b456a9
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/User"
            examples:
              validUpdate:
                value:
                  email: "new-email@example.com"
                  password: Y0uKn0wTheDri11
                  roles:
                    - PET_OWNER
                    - PET_SITTER
              invalidUpdate:
                value:
                  email: "malformed-email-example.com"
                  roles: []
        required: true
      responses:
        "200":
          description: Modified User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                validUpdate:
                  value:
                    id: fdc09ca4-4e44-4040-8873-9eaec0b456a9
                    email: "new-email@example.com"
                    full_name: John Smith
                    roles:
                      - PET_OWNER
                      - PET_SITTER
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                invalidUpdate:
                  value:
                    type: "http://localhost:8080/errors/bad-request"
                    title: Bad Request
                    status: 400
                    detail: Invalid argument(s)
                    instance: /users/fdc09ca4-4e44-4040-8873-9eaec0b456a9
                    user.email.address: must be a well-formed email address
                    user.roles: size must be between 1 and 3
                    timestamp: "2025-03-08 14:58"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
        "404":
          description: User Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
    delete:
      tags:
        - Users
      summary: Delete User
      operationId: deleteUserWithId
      parameters:
        - name: uuid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validUser:
              value: e3923482-3487-4327-a796-f86467f73e57
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
        "404":
          description: User Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
  /users/{uuid}/jobs:
    get:
      tags:
        - Users
      summary: View Jobs for User
      operationId: viewJobsForUser
      parameters:
        - name: uuid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validUser:
              value: 7afc58f7-7acf-49fe-967e-9b73accc2e09
      responses:
        "200":
          description: Jobs for User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCollection"
              examples:
                validUser:
                  value:
                    items:
                      - id: 18f4d0fc-129e-4212-ad8a-c070e4619dd9
                        creator_user_id: 7afc58f7-7acf-49fe-967e-9b73accc2e09
                        start_time: "2025-03-10 12:00"
                        end_time: "2025-03-10 14:00"
                        activity: Walk
                        dog:
                          name: Rambo
                          age: 3
                          breed: Bichon Frisé
                          size: 6kg
                      - id: d19d609a-7ab0-4abe-833b-914017be02fe
                        creator_user_id: 7afc58f7-7acf-49fe-967e-9b73accc2e09
                        start_time: "2025-03-13 12:00"
                        end_time: "2025-03-13 17:00"
                        activity: Walk, House sit
                        dog:
                          name: Rambo
                          age: 3
                          breed: Bichon Frisé
                          size: 6kg
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
  /users/{uuid}/job-applications:
    get:
      tags:
        - Users
      summary: View Job Applications for User
      operationId: viewApplicationsForUser
      parameters:
        - name: uuid
          in: path
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validUser:
              value: 1ccd609a-8339-40bd-b8ac-f0fbf8bea21c
      responses:
        "200":
          description: Job Applications for User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobApplicationCollection"
              examples:
                validUser:
                  value:
                    items:
                      - id: e60fd6aa-9386-4577-b3a7-b6d616339858
                        status: PENDING
                        user_id: 1ccd609a-8339-40bd-b8ac-f0fbf8bea21c
                        job_id: d7c95c55-4db6-4a84-992f-6966233ea06f
                      - id: fb141f76-cf70-417a-8967-fe2a354fbf28
                        status: ACCEPTED
                        user_id: 1ccd609a-8339-40bd-b8ac-f0fbf8bea21c
                        job_id: 1d7db287-1fa0-43a2-ab4b-6aa5b2bd9c56
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: createJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
            examples:
              validJob:
                value:
                  start_time: "2028-03-13 11:30"
                  end_time: "2028-03-13 13:30"
                  activity: Walk
                  dog:
                    name: Rambo
                    age: 3
                    breed: Bichon Frisé
                    size: 6kg
              invalidJob:
                value:
                  start_time: "2028-04-13 12:00"
                  end_time: "2028-04-13 11:00"
                  dog:
                    name: Rambo
                    age: 3
                    breed: Bichon Frisé
                    size: 6kg
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: Job URI
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                invalidJob:
                  value:
                    type: "http://localhost:8080/errors/bad-request"
                    title: Bad Request
                    status: 400
                    detail: Invalid argument(s)
                    instance: /jobs
                    job: start time must be before end time
                    job.activity: cannot be null
                    timestamp: "2025-03-09 10:11"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        #              examples:
        #                unauthorized:
        #                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
    #              examples:
    #                forbidden:
    #                  $ref: "#/components/examples/problemDetail"
    get:
      tags:
        - Jobs
      summary: View all Jobs
      operationId: viewAllJobs
      responses:
        "200":
          description: All Jobs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobCollection"
              examples:
                allJobs:
                  value:
                    items:
                      - id: 5882fadc-50ac-432a-86f1-02b5eedd5df0
                        creator_user_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        start_time: "2025-03-20 10:00"
                        end_time: "2025-03-20 11:30"
                        activity: Play
                        dog:
                          name: Rambo
                          age: "3"
                          breed: Bichon Frisé
                          size: 6kg
                      - id: dc28aaaf-f12f-4804-b529-f1be7ec8b77d
                        creator_user_id: b191166e-70e6-4f63-b7eb-9e6e7a3ae1e5
                        start_time: "2025-03-20 12:00"
                        end_time: "2025-03-20 15:00"
                        activity: Walk
                        dog:
                          name: Archie
                          age: 6
                          breed: Bolognese
                          size: 3kg
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        #              examples:
        #                unauthorized:
        #                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  #              examples:
  #                forbidden:
  #                  $ref: "#/components/examples/problemDetail"
  /jobs/{uuid}:
    get:
      tags:
        - Jobs
      summary: View Job
      operationId: viewJobWithId
      parameters:
        - name: uuid
          in: path
          description: Job ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validJob:
              value: 8f028c7a-b18b-4fb7-93f5-af7fa5df4de2
      responses:
        "200":
          description: Job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
              examples:
                validJob:
                  value:
                    id: 8f028c7a-b18b-4fb7-93f5-af7fa5df4de2
                    creator_user_id: 17007b2c-6791-4773-bcdd-4c474698e2b9
                    start_time: "2025-03-17 13:00"
                    end_time: "2025-03-17 15:00"
                    activity: Walk, Play
                    dog:
                      name: Rambo
                      age: 3
                      breed: Bichon Frisé
                      size: 6kg
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
        "404":
          description: Job Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
    patch:
      tags:
        - Jobs
      summary: Modify Job
      operationId: modifyJobWithId
      parameters:
        - name: uuid
          in: path
          description: Job ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validUpdate:
              value: 11eab1f0-288f-4dde-a32b-4401deb52263
            invalidUpdate:
              value: 11eab1f0-288f-4dde-a32b-4401deb52263
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Job"
            examples:
              validUpdate:
                value:
                  end_time: "2028-03-20 15:00"
                  activity: Walk, Exercise
                  dog:
                    age: 7
                    size: 5kg
              invalidUpdate:
                value:
                  end_time: "2028-03-20 09:00"
        required: true
      responses:
        "200":
          description: Modified Job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
              examples:
                validUpdate:
                  value:
                    id: 11eab1f0-288f-4dde-a32b-4401deb52263
                    creator_user_id: 10fba06c-8a79-4016-98af-d1c1e0039ddf
                    start_time: "2028-03-20 10:00"
                    end_time: "2028-03-20 15:00"
                    activity: Walk, Exercise
                    dog:
                      name: Archie
                      age: 7
                      breed: Bolognese
                      size: 5kg
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                invalidUpdate:
                  value:
                    type: "http://localhost:8080/errors/bad-request"
                    title: Bad Request
                    status: 400
                    detail: Invalid argument(s)
                    instance: /jobs/11eab1f0-288f-4dde-a32b-4401deb52263
                    job.end_time: "end time 2028-03-20 09:00 must be after current start time 2028-03-20 10:00"
                    timestamp: "2025-03-09 15:50"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
        "404":
          description: Job Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: deleteJobWithId
      parameters:
        - name: uuid
          in: path
          description: Job ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validJob:
              value: 9cb2ab0a-16fb-4ead-bbde-5167c0cb823c
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
        "404":
          description: Job Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
  /jobs/{uuid}/job-applications:
    get:
      tags:
        - Jobs
      summary: View Applications for Job
      operationId: viewApplicationsForJob
      parameters:
        - name: uuid
          in: path
          description: Job ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validJob:
              value: 92ee8ec0-d0eb-4204-9cc6-c0696ff9e003
      responses:
        "200":
          description: Job Applications for Job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobApplicationCollection"
              examples:
                validJob:
                  value:
                    items:
                      - id: cfafe48a-e0d9-4999-8966-1ef532ffee57
                        status: PENDING
                        user_id: 524d82a8-5040-47bf-88c3-b75ee949be21
                        job_id: 92ee8ec0-d0eb-4204-9cc6-c0696ff9e003
                      - id: 8937e48a-dcf2-4063-ada6-cfea662f87fd
                        status: PENDING
                        user_id: 1dce6402-7bdb-4a59-a6a4-4f711af39d8d
                        job_id: 92ee8ec0-d0eb-4204-9cc6-c0696ff9e003
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                forbidden:
                  $ref: "#/components/examples/problemDetail"
        "404":
          description: Job Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
    post:
      tags:
        - Jobs
      summary: Create Job Application
      operationId: createJobApplication
      parameters:
        - name: uuid
          in: path
          description: Job ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validJobApplication:
              value: 5b7ab97d-c949-4ef5-8289-969dfef1916a
            invalidJobApplication:
              value: 5b7ab97d-c949-4ef5-8289-969dfef1916a
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobApplication"
            examples:
              validJobApplication:
                value:
                  status: PENDING
              invalidJobApplication:
                value:
                  status: ACCEPTED
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: Job Application URI
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                badRequest:
                  $ref: "#/components/examples/problemDetail"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                invalidJobApplication:
                  value:
                    type: "http://localhost:8080/errors/forbidden"
                    title: Forbidden
                    status: 403
                    detail: Cannot create - Job Application status must equal PENDING
                    instance: /jobs/a1b8d59d-59b0-444e-b538-01751ba8b6ae/job-applications
                    timestamp: "2025-03-09 16:27"
        "404":
          description: Job Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
  /job-applications/{uuid}:
    patch:
      tags:
        - Jobs
      summary: Modify Job Application
      operationId: modifyJobApplicationWithId
      parameters:
        - name: uuid
          in: path
          description: Job Application ID
          required: true
          schema:
            type: string
            format: uuid
          examples:
            validUpdate:
              value: 2c30ff89-f678-4203-ad26-df8b30e64895
            invalidUpdate:
              value: 2c30ff89-f678-4203-ad26-df8b30e64895
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/JobApplication"
            examples:
              validUpdate:
                value:
                  status: WITHDRAWN
              invalidUpdate:
                value:
                  status: ACCEPTED
        required: true
      responses:
        "200":
          description: Modified Job Application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobApplication"
              examples:
                validUpdate:
                  value:
                    id: 2c30ff89-f678-4203-ad26-df8b30e64895
                    status: WITHDRAWN
                    user_id: 34e5ad03-1c6f-40cf-aa37-4a2a2261a92f
                    job_id: 997ec585-dfd0-4b67-9166-39c3d39df501
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                unauthorized:
                  $ref: "#/components/examples/problemDetail"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                invalidUpdate:
                  value:
                    type: "http://localhost:8080/errors/forbidden"
                    title: Forbidden
                    status: 403
                    detail: "Cannot modify - modifying Job Application as Pet Sitter, status must be in [PENDING, WITHDRAWN]"
                    instance: /job-applications/2c30ff89-f678-4203-ad26-df8b30e64895
                    timestamp: "2025-03-09 16:43"
        "404":
          description: Job Application Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              examples:
                notFound:
                  $ref: "#/components/examples/problemDetail"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          example: "email@example.com"
        password:
          maxLength: 20
          minLength: 8
          type: string
          format: password
          writeOnly: true
        fullName:
          maxLength: 50
          minLength: 0
          type: string
        roles:
          maxItems: 3
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - PET_OWNER
              - PET_SITTER
              - ADMIN
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties:
            type: object
    SessionRequest:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          format: email
          example: "email@example.com"
        password:
          maxLength: 20
          minLength: 8
          type: string
          format: password
          writeOnly: true
    Session:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          readOnly: true
        authHeader:
          type: string
          description: apiKey (Bearer token)
          readOnly: true
    Dog:
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        age:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
        breed:
          maxLength: 30
          minLength: 0
          type: string
        size:
          maxLength: 30
          minLength: 0
          type: string
    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creatorUserId:
          type: string
          format: uuid
        startTime:
          type: string
          example: "2024-12-15 12:00"
        endTime:
          type: string
          example: "2024-12-15 14:00"
        activity:
          maxLength: 500
          minLength: 0
          type: string
        dog:
          $ref: "#/components/schemas/Dog"
    JobApplication:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          type: string
          enum:
            - PENDING
            - ACCEPTED
            - REJECTED
            - WITHDRAWN
        userId:
          type: string
          format: uuid
        jobId:
          type: string
          format: uuid
    JobCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Job"
    JobApplicationCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/JobApplication"
  examples:
    problemDetail:
      value:
        type: A URI reference that identifies the problem type
        title: "A short, human-readable summary of the problem type"
        status: HTTP status code
        detail: A human-readable explanation specific to this occurrence of the problem
        instance: A URI reference that identifies the specific occurrence of the problem
        timestamp: The time at which the problem occurred
        objectName: A human-readable explanation of a problem object specific to this
          occurrence of the problem
        objectName.fieldName: A human-readable explanation of a problem object and
          associated field specific to this occurrence of the problem
  securitySchemes:
    SessionToken:
      type: apiKey
      name: Authorization
      in: header

